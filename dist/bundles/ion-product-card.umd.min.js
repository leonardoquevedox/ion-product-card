!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("ionic-angular"),require("@ngx-translate/core"),require("ngx-currency-mask")):"function"==typeof define&&define.amd?define("ion-product-card",["exports","@angular/core","@angular/common","ionic-angular","@ngx-translate/core","ngx-currency-mask"],n):n(t["ion-product-card"]={},t.ng.core,t.ng.common,t.ionicAngular,t.ngxTranslate,t.ngxCurrencyMask)}(this,function(t,o,n,e,r,i){"use strict";var c=function(){function t(t,n,e){this.viewCtrl=t,this.navParams=n,this.changeDetector=e,this.product=n.data.product,this.options=n.data.options,this.events=n.data.events}return t.prototype.isDeleted=function(){return this.product&&this.product.information&&this.product.information.deleted},t.prototype.emit=function(t){return this.events[t].emit(this.product)},t.prototype.hasListeners=function(t){return this.events&&t&&0<t.observers.length},t.prototype.close=function(t){this.viewCtrl.dismiss(t)},t.decorators=[{type:o.Component,args:[{template:'<button ion-item popover-item *ngIf="hasListeners(events.edit)" (click)="emit(\'edit\'); close();" [disabled]="product.showSpinner">\n    <span translate="edit"></span>\n</button>\n<button ion-item popover-item *ngIf="!isDeleted() && hasListeners(events.deactivate)" (click)="emit(\'deactivate\'); close();" [disabled]="product.showSpinner">\n    <span translate="deactivate"></span>\n</button>\n<button ion-item popover-item *ngIf="isDeleted() && hasListeners(events.activate)" (click)="emit(\'activate\'); close();" [disabled]="product.showSpinner">\n    <span translate="activate"></span>\n</button>',changeDetection:o.ChangeDetectionStrategy.Default}]}],t.ctorParameters=function(){return[{type:e.ViewController},{type:e.NavParams},{type:o.ChangeDetectorRef}]},t}(),s=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule,e.IonicModule,r.TranslateModule],declarations:[c],exports:[c]}]}],t}(),a=function(){function t(t,n,e){this.zone=t,this.changeDetector=n,this.popoverCtrl=e,this.CURRENCY_OPTIONS={prefix:"R$ ",thousands:".",decimal:","},this.add=new o.EventEmitter,this.save=new o.EventEmitter,this.view=new o.EventEmitter,this.edit=new o.EventEmitter,this.remove=new o.EventEmitter,this.deactivate=new o.EventEmitter,this.activate=new o.EventEmitter,this.increment=new o.EventEmitter,this.decrement=new o.EventEmitter,this.blur=new o.EventEmitter}return t.prototype.ngOnInit=function(){this.changeDetector.detectChanges(),this.options=this.options||{},this.options.transform&&(this.product=this.options.transform(this.product))},t.prototype.formatPrice=function(t){return(t=parseFloat(t))&&t.toFixed?t.toFixed(2).split(".")[0].concat(",").concat(t.toFixed(2).split(".")[1]):""},t.prototype.showItemLeft=function(){return this.options.showDiscountTag&&this.product.discountPrice||this.options.showPicture},t.prototype.getQuantityFor=function(t){return t.quantity?t.quantity+" "+(t.quantity&&t.quantity,"Un."):"Adicionar"},t.prototype.showQuantityButtons=function(){return(this.options.showDecreaseButton?this.options.showDecreaseButton(this.product):0<this.decrement.observers.length)||(this.options.showIncreaseButton?this.options.showIncreaseButton(this.product):0<this.increment.observers.length)},t.prototype.showInventoryOptions=function(){return 0<this.remove.observers.length||0<this.add.observers.length||0<this.save.observers.length},t.prototype.showCatalogueOptions=function(){return 0<this.edit.observers.length||0<this.activate.observers.length||0<this.deactivate.observers.length},t.prototype.isDeleted=function(){return this.product&&this.product.information&&this.product.information.deleted},t.prototype.showOptionsFor=function(t,n){var e=this.popoverCtrl.create(c,{product:n,options:this.options,events:{add:this.add,save:this.save,edit:this.edit,deactivate:this.deactivate,activate:this.activate}});e.present({ev:t}),e.onDidDismiss(function(t){})},t.decorators=[{type:o.Component,args:[{selector:"ion-product-card",template:'<ion-card product *ngIf="product && product.information" [ngClass]="{ \'deleted\': isDeleted(), \'show-image\': options.showPicture, \'discount-product\' : product.discountPrice }">\r\n    <ion-card-header product-header color="secondary" *ngIf="options.showPicture" (click)="view.emit(product)">\r\n        <section product-name>\r\n            <p discount-tag *ngIf="options.showDiscountTag && product.discountPrice">\r\n                <span translate="promotion"></span>\r\n            </p>\r\n            {{ product.information.name }}\r\n            <br/>\r\n            <section *ngIf="options.showProductQuantity">({{product.quantity}}x)</section>\r\n        </section>\r\n        <ion-spinner product-spinner *ngIf="product.loading"></ion-spinner>\r\n    </ion-card-header>\r\n    <ion-card-content no-padding>\r\n        <ion-item text-center no-padding>\r\n            <article item-left product-picture>\r\n                <img [src]="product.picture" />\r\n            </article>\r\n            <form>\r\n                <p text-color="almost-white" deleted-tag *ngIf="isDeleted()">\r\n                    Status:\r\n                    <span translate="deactivated"></span>\r\n                </p>\r\n                <p product-info product-price discount *ngIf="options.showDiscountPrice && product.discountPrice">\r\n                    <span prefix translate="by" *ngIf="product.discountPrice"></span>:\r\n                    <span price-value>{{ product.discountPrice | currency : \'BRL\' }}</span>\r\n                </p>\r\n                <p product-info product-price *ngIf="options.showPrice && product.price">\r\n                    <span prefix *ngIf="product.discountPrice">\r\n                        <span translate="from"></span>:\r\n                    </span>\r\n                    <span price-value>{{ product.price | currency : \'BRL\' }}</span>\r\n                </p>\r\n                <ion-row>\r\n                    <section col [attr.col-6]="options.showStockInput" *ngIf="options.showPriceInput" price-input>\r\n                        <input name="price" autocomplete="off" autocorrect="off" padding-input type="tel" placeholder="PreÃ§o" [(ngModel)]="product.price"\r\n                            currencyMask [options]="CURRENCY_OPTIONS">\r\n                    </section>\r\n                    <section col col-6 *ngIf="options.showStockInput" stock-input>\r\n                        <input name="stock" autocomplete="off" autocorrect="off" padding-input type="tel" [placeholder]="\'Estoque (ex: 100)\'" [(ngModel)]="product.stock">\r\n                        <label text-color="almost-white">\r\n                            <span translate="unities"></span>\r\n                        </label>\r\n                    </section>\r\n                </ion-row>\r\n                <section *ngIf="options.showDiscountPriceInput" price-input discount-price-input>\r\n                    <span prefix>\r\n                        <span translate="by"></span>:\r\n                    </span>\r\n                    <input name="discount_price" type="tel" [placeholder]="00.00 | currency : \'BRL\'" [(ngModel)]="product.discountPrice" currencyMask\r\n                        [options]="CURRENCY_OPTIONS">\r\n                </section>\r\n            </form>\r\n            <section item-right *ngIf="showQuantityButtons()">\r\n                <div no-padding cart-options>\r\n                    <button ion-button color="danger" quantity-button *ngIf="decrement.observers.length > 0" (click)="decrement.emit(product)"\r\n                        [disabled]="product.loading || !product.quantity || !(product.quantity > 0)">\r\n                        <ion-icon name="la-minus"></ion-icon>\r\n                    </button>\r\n                    <ion-icon cart-icon name="la-shopping-cart"></ion-icon>\r\n                    <button ion-button color="balanced" quantity-button *ngIf="increment.observers.length > 0" (click)="increment.emit(product)"\r\n                        [disabled]="product.loading">\r\n                        <ion-icon name="la-plus"></ion-icon>\r\n                    </button>\r\n                    <p>{{ getQuantityFor(product) }}</p>\r\n                </div>\r\n            </section>\r\n            <section *ngIf="showInventoryOptions()" inventory-options float-right>\r\n                <button type="submit" ion-button round icon unicode color="balanced" *ngIf="save.observers.length > 0" (click)="save.emit(product)"\r\n                    [disabled]="product.loading || !product.price || (product.discountPrice ? product.price < product.discountPrice : false)">\r\n                    <ion-icon name="la-check"></ion-icon>\r\n                </button>\r\n                <button type="submit" ion-button round icon add-button color="balanced" *ngIf="add.observers.length > 0" (click)="add.emit(product)"\r\n                    [disabled]="product.loading || !product.price || (product.discountPrice ? product.price < product.discountPrice : false)">\r\n                    <ion-icon name="la-check"></ion-icon>\r\n                </button>\r\n                <button type="button" ion-button round icon delete-button remove-button color="danger" *ngIf="remove.observers.length > 0"\r\n                    (click)="remove.emit(product)" [disabled]="product.loading">\r\n                    <ion-icon name="la-trash"></ion-icon>\r\n                </button>\r\n            </section>\r\n            \r\n            <section item-right *ngIf="showCatalogueOptions()">\r\n                <a (click)="showOptionsFor($event, product)" text-color="dark" more-options>\r\n                    <ion-icon name="la-ellipsis-v"></ion-icon>\r\n                </a>\r\n            </section>\r\n            \r\n            <button ion-button clear view-more color="positive" (click)="view.emit(product)" *ngIf="view.observers.length > 0">\r\n                <span translate="view_more"></span>\r\n            </button>\r\n        </ion-item>\r\n    </ion-card-content>\r\n</ion-card>',styles:["\n        :host ion-item {\n            border-bottom: 0px\n        }\n    "]}]}],t.ctorParameters=function(){return[{type:o.NgZone},{type:o.ChangeDetectorRef},{type:e.PopoverController}]},t.propDecorators={product:[{type:o.Input,args:["product"]}],options:[{type:o.Input,args:["options"]}],add:[{type:o.Output}],save:[{type:o.Output}],view:[{type:o.Output}],edit:[{type:o.Output}],remove:[{type:o.Output}],deactivate:[{type:o.Output}],activate:[{type:o.Output}],increment:[{type:o.Output}],decrement:[{type:o.Output}],blur:[{type:o.Output}]},t}(),p=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule,e.IonicModule,r.TranslateModule,i.CurrencyMaskModule,s],declarations:[a],exports:[a]}]}],t}();t.IonProductCardOptionsModule=s,t.IonProductCardComponent=a,t.IonProductCardModule=p,t.Éµa=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ion-product-card.umd.min.js.map